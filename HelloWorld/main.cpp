#include <iostream> // Директива препроцессора "Подключить заголовочный файл Iostream (библиотека ввода/вывода)
#include "func.h" // Наш собственный заголовочный файл с функциями (!Не определять функции в заголовочном файле!)
//#pragma once // аналог хедергарда в более новых версиях компиляторов

using namespace std;
/* '::' - оператор разрешения области видимости, который указывает на пространство имен,
к которому относится данная переменная, например std::cout*/


int main()


{
    int a = 1, b = 2;
    int x = numberx()+add(a+1, b+2); // можно передавать функции, выражения и переменные в качестве аргументов
    int y,m,z;
    string name;

    cout << "Привет! Напиши, как тебя зовут? ";
    cin >> name;
    cout << "Рад познакомиться, "<<name<<"! "<<"Я - говорящий черный экран!"<<endl;

    //стейтмент (инструкция, процедура) вывода на экран (std::cout), << - оператор вывода
    cout << name <<", можешь ввести какое-нибудь число?" << endl;
    cout << "А я прибавлю к нему что-нибудь!: ";
    cin >> y;
       //стейтмент (инструкция, процедура) считывания ввода (std::cin), >> - оператор ввода
    cout << "У нас получилось: " << x+y << endl;

    laught();

    cout << "Теперь введи любое другое число, и я удвою его!: ";
    cin >> m;
    cout << "Вот что получилось: " << doubleNumber(m) << endl;

    cout << "А теперь введи число, которое я возведу в степень!: ";
    cin >> z;
    cout << "После использования функции мы получаем " << exp(z)<<"!" << endl;
    cout << "Спасибо!"<<endl;
    laught2();
    //оператор возврата, передающий значение в ОС. Если 0 - все ок.
    return 0;


}
